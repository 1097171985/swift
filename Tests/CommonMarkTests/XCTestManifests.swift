#if !canImport(ObjectiveC)
import XCTest

extension MarkdownDocumentTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkdownDocumentTest = [
        ("testInitByParsing_blockQuote", testInitByParsing_blockQuote),
        ("testInitByParsing_codeBlock", testInitByParsing_codeBlock),
        ("testInitByParsing_emphasis", testInitByParsing_emphasis),
        ("testInitByParsing_heading", testInitByParsing_heading),
        ("testInitByParsing_HTMLBlock", testInitByParsing_HTMLBlock),
        ("testInitByParsing_image", testInitByParsing_image),
        ("testInitByParsing_inlineHTML", testInitByParsing_inlineHTML),
        ("testInitByParsing_lineBreak", testInitByParsing_lineBreak),
        ("testInitByParsing_link", testInitByParsing_link),
        ("testInitByParsing_listBulleted", testInitByParsing_listBulleted),
        ("testInitByParsing_listOrdered", testInitByParsing_listOrdered),
        ("testInitByParsing_softBreak", testInitByParsing_softBreak),
        ("testInitByParsing_strong", testInitByParsing_strong),
        ("testInitByParsing_text", testInitByParsing_text),
        ("testInitByParsing_thematicBreak", testInitByParsing_thematicBreak),
    ]
}

extension MarkdownRedneringTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkdownRedneringTest = [
        ("testStringRenderedUsing_blockQuote", testStringRenderedUsing_blockQuote),
        ("testStringRenderedUsing_codeBlock", testStringRenderedUsing_codeBlock),
        ("testStringRenderedUsing_emphasis", testStringRenderedUsing_emphasis),
        ("testStringRenderedUsing_heading", testStringRenderedUsing_heading),
        ("testStringRenderedUsing_htmlBlock", testStringRenderedUsing_htmlBlock),
        ("testStringRenderedUsing_image", testStringRenderedUsing_image),
        ("testStringRenderedUsing_inlineCode", testStringRenderedUsing_inlineCode),
        ("testStringRenderedUsing_inlineHTML", testStringRenderedUsing_inlineHTML),
        ("testStringRenderedUsing_lineBreak", testStringRenderedUsing_lineBreak),
        ("testStringRenderedUsing_link", testStringRenderedUsing_link),
        ("testStringRenderedUsing_listBulleted", testStringRenderedUsing_listBulleted),
        ("testStringRenderedUsing_listOrdered", testStringRenderedUsing_listOrdered),
        ("testStringRenderedUsing_paragraph", testStringRenderedUsing_paragraph),
        ("testStringRenderedUsing_softBreak", testStringRenderedUsing_softBreak),
        ("testStringRenderedUsing_strong", testStringRenderedUsing_strong),
        ("testStringRenderedUsing_text", testStringRenderedUsing_text),
        ("testStringRenderedUsing_thematicBreak", testStringRenderedUsing_thematicBreak),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(MarkdownDocumentTest.__allTests__MarkdownDocumentTest),
        testCase(MarkdownRedneringTest.__allTests__MarkdownRedneringTest),
    ]
}
#endif
